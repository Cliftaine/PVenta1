/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pventa;

import java.net.URL;
import java.sql.SQLException;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.SwingConstants;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import sun.swing.SwingAccessor;

/**
 *
 * @author jahziel
 */
public class catProductos extends javax.swing.JPanel {
    
    dbCon con = new dbCon();
    misFunciones mifun = new misFunciones();
    
    /**
     * Creates new form catProductos
     */
    public catProductos() {
        initComponents();
        cargarCombo();
        setlablel(txtInicial);
        formatoTable();
        txtCosto.setHorizontalAlignment(txtCodBarra.RIGHT);
        txtVenta.setHorizontalAlignment(txtCodBarra.RIGHT);
        txtInicial.setHorizontalAlignment(txtCodBarra.RIGHT);
        mEntrada.setHorizontalAlignment(txtCodBarra.RIGHT);
        mSalida.setHorizontalAlignment(txtCodBarra.RIGHT);
        mExistencia.setHorizontalAlignment(txtCodBarra.RIGHT);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ltitlePro = new javax.swing.JLabel();
        hProductos = new javax.swing.JToolBar();
        updateProd = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JToolBar.Separator();
        eliminarProd = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        mostratProd = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JToolBar.Separator();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        strCod = new javax.swing.JLabel();
        strNom = new javax.swing.JLabel();
        strDescrip = new javax.swing.JLabel();
        strUnidad = new javax.swing.JLabel();
        strVenta = new javax.swing.JLabel();
        strCosto = new javax.swing.JLabel();
        txtCodBarra = new javax.swing.JTextField();
        txtNomProd = new javax.swing.JTextField();
        txtDescrip = new javax.swing.JTextField();
        comboUni = new javax.swing.JComboBox<>();
        txtCosto = new javax.swing.JTextField();
        txtVenta = new javax.swing.JTextField();
        strInicial = new javax.swing.JLabel();
        strEntrada = new javax.swing.JLabel();
        strSalida = new javax.swing.JLabel();
        txtInicial = new javax.swing.JTextField();
        mEntrada = new javax.swing.JLabel();
        mSalida = new javax.swing.JLabel();
        bAceptar = new javax.swing.JButton();
        bCancelar = new javax.swing.JButton();
        mExistencia = new javax.swing.JLabel();
        strActual = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        bRegresar = new javax.swing.JButton();

        ltitlePro.setFont(new java.awt.Font("Ubuntu", 1, 24)); // NOI18N
        ltitlePro.setText("Productos");

        hProductos.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        hProductos.setRollover(true);
        hProductos.setEnabled(false);

        updateProd.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        updateProd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/update-50x50.png"))); // NOI18N
        updateProd.setText("Actualizar");
        updateProd.setFocusable(false);
        updateProd.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        updateProd.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        updateProd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateProdActionPerformed(evt);
            }
        });
        hProductos.add(updateProd);
        hProductos.add(jSeparator2);

        eliminarProd.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        eliminarProd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/bma1438178787695_hiresdevice_en-us.png"))); // NOI18N
        eliminarProd.setText("Eliminar");
        eliminarProd.setFocusable(false);
        eliminarProd.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        eliminarProd.setPreferredSize(new java.awt.Dimension(85, 84));
        eliminarProd.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        eliminarProd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarProdActionPerformed(evt);
            }
        });
        hProductos.add(eliminarProd);
        hProductos.add(jSeparator1);

        mostratProd.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        mostratProd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/icon-search.png"))); // NOI18N
        mostratProd.setText("Mostrar");
        mostratProd.setFocusable(false);
        mostratProd.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        mostratProd.setPreferredSize(new java.awt.Dimension(85, 84));
        mostratProd.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        mostratProd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mostratProdActionPerformed(evt);
            }
        });
        hProductos.add(mostratProd);
        hProductos.add(jSeparator3);

        jTabbedPane1.setEnabled(false);

        strCod.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        strCod.setText("Código de barras:");

        strNom.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        strNom.setText("Nombre del producto:");

        strDescrip.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        strDescrip.setText("Descripción:");

        strUnidad.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        strUnidad.setText("Unidad:");

        strVenta.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        strVenta.setText("Precio de venta:");

        strCosto.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        strCosto.setText("Precio de costo:");

        txtCodBarra.setMaximumSize(new java.awt.Dimension(10, 28));

        txtNomProd.setMaximumSize(new java.awt.Dimension(10, 28));

        txtDescrip.setMaximumSize(new java.awt.Dimension(10, 28));

        comboUni.setEditable(true);

        txtCosto.setText("0");
        txtCosto.setMaximumSize(new java.awt.Dimension(10, 28));

        txtVenta.setText("0");
        txtVenta.setMaximumSize(new java.awt.Dimension(10, 28));

        strInicial.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        strInicial.setText("Existencia inicial:");

        strEntrada.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        strEntrada.setText("Entrada:");

        strSalida.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        strSalida.setText("Salida:");

        txtInicial.setText("0");
        txtInicial.setMaximumSize(new java.awt.Dimension(10, 28));

        mEntrada.setText("0");
        mEntrada.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        mSalida.setText("0");
        mSalida.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        bAceptar.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        bAceptar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Aceptar.png"))); // NOI18N
        bAceptar.setText("Aceptar");
        bAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAceptarActionPerformed(evt);
            }
        });

        bCancelar.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        bCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/cancel123.png"))); // NOI18N
        bCancelar.setText("Cancelar");
        bCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCancelarActionPerformed(evt);
            }
        });

        mExistencia.setText("0");
        mExistencia.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        strActual.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        strActual.setText("Existencia actual:");

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/RRQ_Complete_16x16.png"))); // NOI18N

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/RRQ_Complete_16x16.png"))); // NOI18N

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/RRQ_Complete_16x16.png"))); // NOI18N

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/RRQ_Complete_16x16.png"))); // NOI18N

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/RRQ_Complete_16x16.png"))); // NOI18N

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/RRQ_Complete_16x16.png"))); // NOI18N

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/RRQ_Complete_16x16.png"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(strCod)
                                    .addComponent(strNom)
                                    .addComponent(strUnidad)
                                    .addComponent(strDescrip)
                                    .addComponent(strCosto)
                                    .addComponent(strVenta)))
                            .addComponent(strEntrada)
                            .addComponent(strSalida)
                            .addComponent(strInicial)
                            .addComponent(strActual))
                        .addGap(77, 77, 77)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(mSalida, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtNomProd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtDescrip, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(comboUni, 0, 218, Short.MAX_VALUE)
                                    .addComponent(txtCosto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtVenta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtInicial, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(mEntrada, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtCodBarra, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel7)))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(bCancelar)
                                .addComponent(mExistencia, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(bAceptar))
                .addContainerGap(163, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(strCod)
                    .addComponent(jLabel1)
                    .addComponent(txtCodBarra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(strNom)
                    .addComponent(txtNomProd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(7, 7, 7)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtDescrip, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(strDescrip)))
                .addGap(8, 8, 8)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(comboUni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(strUnidad)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(strCosto)
                    .addComponent(jLabel5)
                    .addComponent(txtCosto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtVenta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(strVenta)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtInicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(strInicial)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(strEntrada))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mSalida, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(strSalida))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mExistencia, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(strActual))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bAceptar)
                    .addComponent(bCancelar))
                .addContainerGap())
        );

        jTabbedPane1.addTab("     ", jPanel1);

        jTable1 = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int vColIndex) {
                return false;
            }};
            jTable1.setAutoCreateRowSorter(true);
            jTable1.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null}
                },
                new String [] {
                    "Title 1", "Title 2", "Title 3", "Title 4"
                }
            ));
            jTable1.getTableHeader().setReorderingAllowed(false);
            jScrollPane1.setViewportView(jTable1);

            bRegresar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/return-50.png"))); // NOI18N
            bRegresar.setText("Regresar");
            bRegresar.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    bRegresarActionPerformed(evt);
                }
            });

            javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
            jPanel3.setLayout(jPanel3Layout);
            jPanel3Layout.setHorizontalGroup(
                jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 659, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addComponent(bRegresar)
                            .addGap(0, 0, Short.MAX_VALUE)))
                    .addContainerGap())
            );
            jPanel3Layout.setVerticalGroup(
                jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(bRegresar, javax.swing.GroupLayout.PREFERRED_SIZE, 43, Short.MAX_VALUE)
                    .addGap(30, 30, 30))
            );

            jTabbedPane1.addTab("     ", jPanel3);

            javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
            this.setLayout(layout);
            layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(ltitlePro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGap(124, 124, 124))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(hProductos, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jTabbedPane1))
                            .addContainerGap())))
            );
            layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(ltitlePro)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(hProductos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 456, javax.swing.GroupLayout.PREFERRED_SIZE))
            );
        }// </editor-fold>//GEN-END:initComponents

    private void updateProdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateProdActionPerformed
        // TODO add your handling code here:
        String cod = JOptionPane.showInputDialog("Ingresa el codigo de barras:");
        if(cod == null){
            //JOptionPane.showMessageDialog(null, "Ingrese un codigo","Duran Gourmet",JOptionPane.INFORMATION_MESSAGE);
        }else {
                txtCodBarra.setText(cod);
                if(!existeProd(true)){
                    JOptionPane.showMessageDialog(null, "El Producto no existe","Duran Gourmet",JOptionPane.INFORMATION_MESSAGE);
                }else{
            //actualizar
            //ActualiProd()
                    bAceptar.setText("Modificar");
                    txtCodBarra.setEditable(false);
                    txtCodBarra.setEnabled(false);
                    updateProd.setEnabled(false);
                    eliminarProd.setEnabled(false);
                    mostratProd.setEnabled(false);
                }
        }
        
    }//GEN-LAST:event_updateProdActionPerformed

    private void bAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bAceptarActionPerformed
        // TODO add your handling code here:
        if(bAceptar.getText() == "Aceptar"){
            if(existeProd(false)){
                JOptionPane.showMessageDialog(null, "El codigo ya existe","Duran Gourmet",JOptionPane.INFORMATION_MESSAGE);
                veriDatos();
            }else if(veriDatos()){
                insertarDatos();
            }
        }else if(bAceptar.getText() == "Modificar"){
            if(veriDatos()){
                ActualiProd();
                bAceptar.setText("Aceptar");
                txtCodBarra.setEditable(true);
                txtCodBarra.setEnabled(true);
                updateProd.setEnabled(true);
                eliminarProd.setEnabled(true);
                mostratProd.setEnabled(true);
            }
            
        }
            
    }//GEN-LAST:event_bAceptarActionPerformed

    private void eliminarProdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarProdActionPerformed
        // TODO add your handling code here:
        String cod = JOptionPane.showInputDialog("Ingresa el codigo de barras:");
        txtCodBarra.setText(cod);
        if(cod == null){
            
        }else{
            if(!existeProd(true)){
                JOptionPane.showMessageDialog(null, "El Producto no existe","Duran Gourmet",JOptionPane.INFORMATION_MESSAGE);
            }   else{
           /* txtCodBarra.setEditable(false);
            txtCodBarra.setEnabled(false);
            
            txtNomProd.setEditable(false);
            txtNomProd.setEnabled(false);
            
            txtCosto.setEnabled(false);
            txtCosto.setEditable(false);
            
            txtDescrip.setEditable(false);
            txtDescrip.setEnabled(false);
            
            txtInicial.setEnabled(false);
            txtInicial.setEditable(false);
            
            txtVenta.setEditable(false);
            txtVenta.setEnabled(false);
            
            comboUni.setEditable(false);
            comboUni.setEnabled(false);
            */
           if (JOptionPane.showConfirmDialog(null, "¿Desea eliminar el producto?","Eliminar producto", JOptionPane.YES_NO_OPTION) == 0){
            EliminarPro();
        }
            
           }
            
        }
    }//GEN-LAST:event_eliminarProdActionPerformed

    private void bCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCancelarActionPerformed
        // TODO add your handling code here:
        if(bAceptar.getText() == "Aceptar"){
            if (JOptionPane.showConfirmDialog(null, "¿Desea cancelar?","Cancelar", JOptionPane.YES_NO_OPTION) == 0){
            txtCodBarra.setText("");
            txtNomProd.setText("");
            txtCosto.setText("");
            txtVenta.setText("");
            txtDescrip.setText("");
            txtInicial.setText("0");

        }
              
       }else{
            if (JOptionPane.showConfirmDialog(null, "¿Desea cancelar?","Cancelar", JOptionPane.YES_NO_OPTION) == 0){
                bAceptar.setText("Aceptar");
                txtCodBarra.setEditable(true);
                txtCodBarra.setEnabled(true);
                updateProd.setEnabled(true);
                eliminarProd.setEnabled(true);
                mostratProd.setEnabled(true);
                txtCodBarra.setText("");
                txtNomProd.setText("");
                txtCosto.setText("");
                txtVenta.setText("");
                txtDescrip.setText("");
                txtInicial.setText("0");   
            }
        }
    }//GEN-LAST:event_bCancelarActionPerformed

    private void mostratProdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mostratProdActionPerformed

        
        jTabbedPane1.setSelectedIndex(1);
        cargarProdTable();
        updateProd.setEnabled(false);
        mostratProd.setEnabled(false);
        eliminarProd.setEnabled(false);
        //cargarProdTable();
        
    }//GEN-LAST:event_mostratProdActionPerformed

    private void bRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bRegresarActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(0);
        updateProd.setEnabled(true);
        mostratProd.setEnabled(true);
        eliminarProd.setEnabled(true);
    }//GEN-LAST:event_bRegresarActionPerformed
    
    private void cargarCombo(){
        String sSentencia;
        sSentencia = "select descripcion from Unidades";
        con.ExeQuery(sSentencia);
            try {
                while (con.sqlRes.next()) {                
                    comboUni.addItem(con.sqlRes.getString("descripcion"));
                }
            con.sqlRes.close();
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null, ex);
            } 
        comboUni.setSelectedIndex(-1);
    }
    
    private void setlablel(JTextField txt){
        DocumentListener documentListener = new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent documentEvent) {
                //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
                //printIT(documentEvent);
                cambiarTxt();
            }

            @Override
            public void removeUpdate(DocumentEvent documentEvent) {
                //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
               // printIT(documentEvent);
               cambiarTxt();
            }

            @Override
            public void changedUpdate(DocumentEvent documentEvent) {
                //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
                //printIT(documentEvent);
                cambiarTxt();
            }
        };
        txt.getDocument().addDocumentListener(documentListener);
    }
    
    private void printIT(DocumentEvent documentEvent){
        
        DocumentEvent.EventType type = documentEvent.getType();
        
        if(type.equals(DocumentEvent.EventType.CHANGE)){
            cambiarTxt();
        }else if(type.equals(DocumentEvent.EventType.INSERT)){
            cambiarTxt();
        }else if(type.equals(DocumentEvent.EventType.REMOVE)){
            cambiarTxt();
        }
    }
    
    private void cambiarTxt(){
        int suma;
        int inicial;
        int entradas;
        int salidas;
        
        if(!mifun.strInt(txtInicial.getText())){
            this.mExistencia.setText("Error");
        }else{
            try {
                inicial = Integer.valueOf(txtInicial.getText());
                entradas = Integer.valueOf(mEntrada.getText());
                salidas = Integer.valueOf(mSalida.getText());
                suma = inicial+ entradas - salidas;
                //JOptionPane.showMessageDialog(null, txtInicial.getText());
                this.mExistencia.setText(String.valueOf(inicial));
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, e.toString());
            }
            
        }
    }

    public boolean existeProd(boolean bPantalla){
        boolean bRes = false;
        String sQuery;
        
        //sQuery = "SELECT * FROM catProductos WHERE strCodBarras='"+txtCodBarra.getText()+"'";
        sQuery = "SELECT Productos.CodBarras, Productos.Nombre, Productos.Descrip, "
                + "Unidades.Descripcion as Unidad, Productos.Inicial, Productos.Entrada, "
                + "Productos.Salida, Productos.Actual, Productos.Costo, Productos.Precio "
                + "from Productos"
                + " inner join Unidades on Productos.idUnidad = Unidades.idUnidad"
                + " where Productos.CodBarras = '";
        sQuery += txtCodBarra.getText()+"'";
        //JOptionPane.showMessageDialog(null, sQuery);
        con.ExeQuery(sQuery);
        try {
            if(con.sqlRes.next()){
                if(bPantalla){
                    
                    txtCodBarra.setText(con.sqlRes.getString("CodBarras"));
                    txtNomProd.setText(con.sqlRes.getString("Nombre"));
                    txtDescrip.setText(con.sqlRes.getString("Descrip"));
                    comboUni.setSelectedItem(con.sqlRes.getString("Unidad"));
                    txtCosto.setText(con.sqlRes.getString("Costo"));
                    txtVenta.setText(con.sqlRes.getString("Precio"));
                    txtInicial.setText(con.sqlRes.getString("Inicial"));
                    mEntrada.setText(con.sqlRes.getString("Entrada"));
                    mSalida.setText(con.sqlRes.getString("Salida"));
                     mExistencia.setText(con.sqlRes.getString("Actual"));
                    
                }
                bRes = true;
            }
            con.sqlRes.close();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex.toString());
        }
        return bRes;
    }
    
    private boolean veriDatos(){
        boolean bRes;
        String sValor;
        String svalor2;
        bRes = true;
        
        String path = "/Imagenes/accept.png";  
        URL url = this.getClass().getResource(path);  
        ImageIcon imageAcept = new ImageIcon(url);
        
        String path2 = "/Imagenes/cancelar.png";  
        URL url2 = this.getClass().getResource(path2);  
        ImageIcon imageCancel = new ImageIcon(url2);
        
        //validando el codigo
        
        if(txtCodBarra.getText().trim().isEmpty()){
            jLabel1.setIcon(imageCancel);
            jLabel1.setToolTipText("Falta tamaño");
            bRes = false;
            
        }else{
            jLabel1.setIcon(imageAcept);
            jLabel1.setToolTipText("Correcto");

        }
        //validando el nombre
        if(txtNomProd.getText().trim().isEmpty()){
            jLabel2.setIcon(imageCancel);
            bRes = false;
        }else{
            jLabel2.setIcon(imageAcept);
        }
        //validando la descripcion
        if(txtDescrip.getText().trim().isEmpty()){
            jLabel3.setIcon(imageCancel);
            bRes = false;
        }else{
            jLabel3.setIcon(imageAcept);
        }
        //valida la unidad
        if(comboUni.getEditor().getItem().toString().isEmpty()){
            jLabel4.setIcon(imageCancel);
            bRes = false;
        }else{
            jLabel4.setIcon(imageAcept);
        }
        //valida el precio de costo
        sValor = txtCosto.getText();

        if(!mifun.strDec(sValor)){
            jLabel5.setIcon(imageCancel);
            bRes = false;
        }else if(mifun.convertir(sValor)){
            jLabel5.setIcon(imageAcept);
        }else{
            jLabel5.setIcon(imageCancel);
            bRes = false;
        }
        //valida el precio de venta
        sValor = txtVenta.getText();
        
        if(!mifun.strDec(sValor)){
            jLabel6.setIcon(imageCancel);
            bRes = false;
        }else if(mifun.convertir(sValor)){
            jLabel6.setIcon(imageAcept);
        }else{
            jLabel6.setIcon(imageCancel);
            bRes = false;
        }
        //valida la existencia
        
        svalor2 = txtInicial.getText();
        
        if(!mifun.strInt(svalor2)){
            jLabel7.setIcon(imageCancel);
            bRes = false;
            //JOptionPane.showMessageDialog(null, "aqui1");
        }else if(mifun.convertir2(svalor2)){
            jLabel7.setIcon(imageAcept);
        }else{
            jLabel7.setIcon(imageCancel);
            bRes = false;
            //JOptionPane.showMessageDialog(null, "aqui2");
        }
        return bRes;
    }
    
    private boolean ActualizarUnidad(){
       
        boolean bBandera = false;
        String sQuery ;
        //sQuery = "INSERT INTO Unidades(idUnidad,Descripcion) values(7,'a')";
        sQuery = "insert into Unidades(Descripcion) values(";
        sQuery += "'"+comboUni.getEditor().getItem().toString()+"')";
        //JOptionPane.showMessageDialog(null, sQuery,"Duran Gourmet",JOptionPane.INFORMATION_MESSAGE);    
        if(con.UpdateQuery(sQuery)){
             bBandera = true;
            //JOptionPane.showMessageDialog(null, sQuery,"Duran Gourmet",JOptionPane.INFORMATION_MESSAGE);
        
        }
        else{
            bBandera = false;
        }         
            //JOptionPane.showMessageDialog(null, sQuery,"Duran Gourmet",JOptionPane.INFORMATION_MESSAGE);    
        return bBandera;
    }
    
    private String obtenerIdUnidad(){
        String sQuery;
        String sUnidad= "";
        
        sQuery = "SELECT idUnidad from Unidades where Descripcion='";
        sQuery += comboUni.getEditor().getItem().toString()+"'";
        con.ExeQuery(sQuery);
        try {
            if(con.sqlRes.next()){
                sUnidad = con.sqlRes.getString("idUnidad");
                //JOptionPane.showMessageDialog(null,sUnidad,"Duran Gourmet",JOptionPane.INFORMATION_MESSAGE);
                return sUnidad;
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null,e,"Duran Gourmet",JOptionPane.INFORMATION_MESSAGE);
        }
        return sUnidad;
    }
    
    private void existeUnidad(){
        String sQuery;
        
        sQuery = "SELECT ";
    } 
    
    private void insertarDatos(){
        String sQuery;
        String col;
        sQuery = "INSERT INTO Productos(CodBarras, Nombre, Descrip, idUnidad, "
                + "Inicial, Entrada, Salida, Actual, Costo, Precio, Pantalla) values(";
        sQuery += "'"+txtCodBarra.getText()+"',";
        sQuery += "'"+txtNomProd.getText()+"',";
        sQuery += "'"+txtDescrip.getText()+"',";
        if(ActualizarUnidad()){
            col = obtenerIdUnidad();
            sQuery += "'"+col+"',";
        }else{
            col = obtenerIdUnidad();
           sQuery += "'"+col+"',";
        }
        sQuery += txtInicial.getText()+",";
        sQuery += mEntrada.getText()+",";
        sQuery += mSalida.getText()+",";
        sQuery += mExistencia.getText()+",";
        sQuery += txtCosto.getText()+",";
        sQuery += txtVenta.getText()+",";
        sQuery += "false)";
        //JOptionPane.showMessageDialog(null,sQuery,"Duran Gourmet",JOptionPane.INFORMATION_MESSAGE);

        try {
            if(con.UpdateQuery(sQuery)){
                JOptionPane.showMessageDialog(null,"Se ingreso el producto correctamente","Duran Gourmet",JOptionPane.INFORMATION_MESSAGE);
            }            
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Error:"+ex.toString());
        }
    }
    
    public void ActualiProd(){
                
        String sQuery;
        String sUnidad;
        
        sQuery = "UPDATE Productos set ";
        sQuery+= "Nombre="+"'"+txtNomProd.getText()+"',";
        sQuery+= " Descrip="+"'"+txtDescrip.getText()+"',";
        sUnidad = obtenerIdUnidad();
        if(!sUnidad.isEmpty()){
            sQuery+= " idUnidad="+"'"+sUnidad+"',";
        }
        sQuery+= " Inicial="+txtInicial.getText()+",";
        sQuery+= " Entrada="+mEntrada.getText()+",";
        sQuery+= " Salida="+mSalida.getText()+",";
        sQuery+= " Actual="+mExistencia.getText()+",";
        sQuery+= " Costo="+txtCosto.getText()+",";
        sQuery+= " Precio="+txtVenta.getText();
        sQuery+= " WHERE CodBarras='"+txtCodBarra.getText()+"'";
        //JOptionPane.showMessageDialog(null,sQuery,"Duran Gourmet",JOptionPane.INFORMATION_MESSAGE);
        try {
            if(con.UpdateQuery(sQuery)){
                JOptionPane.showMessageDialog(null,"La modificación se realizo con exito","Duran Gourmet",JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (Exception ex) {
             JOptionPane.showMessageDialog(null, "Error:"+ex.toString());
        }
    }
    
    public void EliminarPro(){
        String sQuery;
        
        sQuery = "DELETE FROM Productos";
        sQuery+= " WHERE CodBarras='"+txtCodBarra.getText()+"'";
        //JOptionPane.showMessageDialog(null,sQuery,"Duran Gourmet",JOptionPane.INFORMATION_MESSAGE);
        try {
            if(con.UpdateQuery(sQuery)){
                JOptionPane.showMessageDialog(null,"El producto se elimino correctamente","Duran Gourmet",JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (Exception ex) {
             JOptionPane.showMessageDialog(null, "Error:"+ex.toString());
        }
    }
    
    public void formatoTable(){
        DefaultTableModel modelo = new DefaultTableModel();
         
        modelo.addColumn("Codigo");
        modelo.addColumn("Nombre");
        modelo.addColumn("Descripción");
        modelo.addColumn("Unidad");
        modelo.addColumn("Inicial");
        modelo.addColumn("Entradas");
        modelo.addColumn("Salidas");
        modelo.addColumn("Existencia");
        modelo.addColumn("Precio costo");
        modelo.addColumn("Precio venta");
        
        jTable1.setModel(modelo);
        
        DefaultTableCellRenderer cAlinear = new DefaultTableCellRenderer();
        
        cAlinear.setHorizontalAlignment(SwingConstants.RIGHT);
        
        jTable1.getColumnModel().getColumn(4).setCellRenderer(cAlinear);
        jTable1.getColumnModel().getColumn(5).setCellRenderer(cAlinear);
        jTable1.getColumnModel().getColumn(6).setCellRenderer(cAlinear);
        jTable1.getColumnModel().getColumn(7).setCellRenderer(cAlinear);
        jTable1.getColumnModel().getColumn(8).setCellRenderer(cAlinear);
        jTable1.getColumnModel().getColumn(9).setCellRenderer(cAlinear);
        
    }
    
    void cargarProdTable(){
        
        String sQuery;
        int iCont;
        int iMax;
        
        DefaultTableModel tb = (DefaultTableModel) jTable1.getModel();
        
        iMax = tb.getRowCount();
        
        for(iCont = 0; iCont < iMax; iCont ++){
            tb.removeRow(0);
        }
        
        Object [] obj = new Object[10];
        
        sQuery = "select Productos.CodBarras, Productos.Nombre, Productos.Descrip, "
                + "Unidades.Descripcion as Unidad,Productos.Inicial,Productos.Entrada,Productos.Salida,"
                + " Productos.Actual, Productos.Costo, Productos.Precio "
                +"from Productos "
                +"inner join Unidades on Productos.idUnidad=Unidades.idUnidad";
        
        con.ExeQuery(sQuery);
            
        try {
            iCont = 0;
            
            while(con.sqlRes.next()){
                
                obj[0] = con.sqlRes.getString("CodBarras");
                obj[1] = con.sqlRes.getString("Nombre");
                obj[2] = con.sqlRes.getString("Descrip");
                obj[3] = con.sqlRes.getString("Unidad");
                obj[4] = con.sqlRes.getString("Inicial");
                obj[5] = con.sqlRes.getString("Entrada");
                obj[6] = con.sqlRes.getString("Salida");
                obj[7] = con.sqlRes.getString("Actual");
                obj[8] = con.sqlRes.getString("Costo");
                obj[9] = con.sqlRes.getString("Precio");
                
                tb.addRow(obj);
            }
            
            con.sqlRes.close();
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error:"+e.toString());
        }
        jTable1.setModel(tb);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bAceptar;
    private javax.swing.JButton bCancelar;
    private javax.swing.JButton bRegresar;
    private javax.swing.JComboBox<String> comboUni;
    private javax.swing.JButton eliminarProd;
    private javax.swing.JToolBar hProductos;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JToolBar.Separator jSeparator2;
    private javax.swing.JToolBar.Separator jSeparator3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel ltitlePro;
    private javax.swing.JLabel mEntrada;
    private javax.swing.JLabel mExistencia;
    private javax.swing.JLabel mSalida;
    private javax.swing.JButton mostratProd;
    private javax.swing.JLabel strActual;
    private javax.swing.JLabel strCod;
    private javax.swing.JLabel strCosto;
    private javax.swing.JLabel strDescrip;
    private javax.swing.JLabel strEntrada;
    private javax.swing.JLabel strInicial;
    private javax.swing.JLabel strNom;
    private javax.swing.JLabel strSalida;
    private javax.swing.JLabel strUnidad;
    private javax.swing.JLabel strVenta;
    private javax.swing.JTextField txtCodBarra;
    private javax.swing.JTextField txtCosto;
    private javax.swing.JTextField txtDescrip;
    private javax.swing.JTextField txtInicial;
    private javax.swing.JTextField txtNomProd;
    private javax.swing.JTextField txtVenta;
    private javax.swing.JButton updateProd;
    // End of variables declaration//GEN-END:variables
}
