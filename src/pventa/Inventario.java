/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pventa;

//import java.sql.Date;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;




/**
 *
 * @author jahziel
 */
public class Inventario extends javax.swing.JPanel {

    dbCon con = new dbCon();
    misFunciones miFun = new misFunciones();
    Date dHoy = new Date();
    
    /**
     * Creates new form Inventario
     */
    public Inventario() {
        initComponents();
        metInicializar();
        txtCosto.setHorizontalAlignment(txtCosto.RIGHT);
        bFolio.setHorizontalAlignment(txtCosto.RIGHT);
        txtCodigo.setHorizontalAlignment(txtCosto.RIGHT);
        //txtNombre.setHorizontalAlignment(txtCosto.RIGHT);
        txtExistencia.setHorizontalAlignment(txtCosto.RIGHT);
        txtFecha.setHorizontalAlignment(txtCosto.RIGHT);
        txtPrecio.setHorizontalAlignment(txtCosto.RIGHT);
        txtCantidad.setHorizontalAlignment(txtCosto.RIGHT);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lInventario = new javax.swing.JLabel();
        lFolio = new javax.swing.JLabel();
        lFecha = new javax.swing.JLabel();
        lMovimiento = new javax.swing.JLabel();
        lNombre = new javax.swing.JLabel();
        lCodigo = new javax.swing.JLabel();
        lExistencia = new javax.swing.JLabel();
        lCosto = new javax.swing.JLabel();
        lPrecio = new javax.swing.JLabel();
        lCantidad = new javax.swing.JLabel();
        lDescripcion = new javax.swing.JLabel();
        txtFecha = new javax.swing.JLabel();
        comboMove = new javax.swing.JComboBox<>();
        bFolio = new javax.swing.JButton();
        txtCodigo = new javax.swing.JTextField();
        txtNombre = new javax.swing.JLabel();
        txtExistencia = new javax.swing.JLabel();
        txtCosto = new javax.swing.JTextField();
        txtPrecio = new javax.swing.JTextField();
        txtCantidad = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtDescrip = new javax.swing.JTextArea();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        lInventario.setFont(new java.awt.Font("Ubuntu", 1, 24)); // NOI18N
        lInventario.setText("Inventario");

        lFolio.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        lFolio.setText("Folio:");

        lFecha.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        lFecha.setText("Fecha");

        lMovimiento.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        lMovimiento.setText("Movimiento:");

        lNombre.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        lNombre.setText("Nombre:");

        lCodigo.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        lCodigo.setText("Codigo:");

        lExistencia.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        lExistencia.setText("Existencia:");

        lCosto.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        lCosto.setText("Costo:");

        lPrecio.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        lPrecio.setText("Precio:");

        lCantidad.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        lCantidad.setText("Cantidad:");

        lDescripcion.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        lDescripcion.setText("Descripci√≥n:");

        txtFecha.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        comboMove.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Entrada", "Salida" }));

        bFolio.setText("0000");
        bFolio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bFolioActionPerformed(evt);
            }
        });

        txtCodigo.setMaximumSize(new java.awt.Dimension(10, 28));
        txtCodigo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCodigoKeyReleased(evt);
            }
        });

        txtNombre.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        txtExistencia.setText("0");
        txtExistencia.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        txtCosto.setText("0");
        txtCosto.setMaximumSize(new java.awt.Dimension(10, 28));

        txtPrecio.setText("0");
        txtPrecio.setMaximumSize(new java.awt.Dimension(10, 28));

        txtCantidad.setText("0");
        txtCantidad.setMaximumSize(new java.awt.Dimension(10, 28));

        txtDescrip.setColumns(20);
        txtDescrip.setRows(5);
        jScrollPane1.setViewportView(txtDescrip);

        jButton3.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/icono-check.png"))); // NOI18N
        jButton3.setText("Iniciar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Aceptar.png"))); // NOI18N
        jButton4.setText("Aceptar");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 160, Short.MAX_VALUE)
                            .addComponent(jButton4))
                        .addComponent(lCantidad)
                        .addComponent(lInventario)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(3, 3, 3)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(lFolio)
                                        .addComponent(lFecha)
                                        .addComponent(lMovimiento)
                                        .addComponent(lCodigo)
                                        .addComponent(lNombre)
                                        .addComponent(lExistencia)
                                        .addComponent(lCosto))
                                    .addGap(64, 64, 64)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(txtExistencia, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txtNombre, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txtCodigo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(comboMove, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txtFecha, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(bFolio, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 262, Short.MAX_VALUE)
                                        .addComponent(txtCosto, javax.swing.GroupLayout.DEFAULT_SIZE, 262, Short.MAX_VALUE)))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(lPrecio)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 103, Short.MAX_VALUE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtCantidad, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txtPrecio, javax.swing.GroupLayout.DEFAULT_SIZE, 262, Short.MAX_VALUE))))))
                    .addComponent(lDescripcion))
                .addGap(0, 43, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lInventario)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lFolio)
                                    .addComponent(bFolio))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lFecha))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lMovimiento)
                                    .addComponent(comboMove, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(lCodigo))
                            .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lNombre))
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lExistencia)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lCosto)
                            .addComponent(txtCosto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lPrecio)
                            .addComponent(txtPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lCantidad)
                            .addComponent(txtCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(txtExistencia, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jButton4))
                .addGap(18, 18, 18))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        metInicializar();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        if(veriDatos()){
            if(comboMove.getSelectedIndex() == 0){
                rEntrada();
            }else{
                rSalida();
            }
            metInicializar();    
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void txtCodigoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodigoKeyReleased
        // TODO add your handling code here:
        ProdExisI(true);
        
        if(evt.getKeyCode()== 112){
            
            varGlobales.sDato = "";
            
            dbCon.sqlString ="SELECT CodBarras as CodigoBarras, Nombre as Nombre from Productos ";
            Inventariob inv = new Inventariob(null, true);
            inv.setTitle("Consulta Codigos");
            inv.setVisible(true);
            
            if(varGlobales.sDato != ""){
                
                txtCodigo.setText(varGlobales.sDato);
                //JOptionPane.showMessageDialog(null, varGlobales.sDato,"Duran Gourmet",JOptionPane.INFORMATION_MESSAGE);                

                ProdExisI(true);
            }else{
                JOptionPane.showMessageDialog(null, "Seleccione un dato","Duran Gourmet",JOptionPane.INFORMATION_MESSAGE);    
            }            
        }
    }//GEN-LAST:event_txtCodigoKeyReleased

    private void bFolioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bFolioActionPerformed
        // TODO add your handling code here:
        varGlobales.sDato = "";
        dbCon.sqlString = "select Inventarios.idFolio as Folio, Movimientos.Descripcion as Descripcion, Inventarios.Fecha as Fecha from Inventarios inner join Movimientos on Inventarios.idMovimiento=Movimientos.idMovimiento";
        
        Inventariob folio = new Inventariob(null, true);
        
        folio.setTitle("Consulta Folios");
        folio.setVisible(true);
        if(varGlobales.sDato != ""){
            //JOptionPane.showMessageDialog(null, varGlobales.sDato,"Duran Gourmet",JOptionPane.INFORMATION_MESSAGE);                

            bFolio.setText(String.format("%05d", Integer.parseInt(varGlobales.sDato)));
        }else{
            JOptionPane.showMessageDialog(null, "Seleccione un dato","Duran Gourmet",JOptionPane.INFORMATION_MESSAGE);    

        }
        
        
        extFolio();
        ProdExisI(true);
    }//GEN-LAST:event_bFolioActionPerformed

    private void metInicializar(){
        
        Date dHoy = new Date();
        SimpleDateFormat dFecha = new SimpleDateFormat("yyyy-MM-dd hh:mm:ss");
        int ff;
        //inicializa fecha
        txtFecha.setText(dFecha.format(dHoy));
        bFolio.setText(String.format("%05d", ObtFolio()));
        //ff = ObtFolio();
        //JOptionPane.showMessageDialog(null, String.valueOf(ff),"Duran Gourmet",JOptionPane.INFORMATION_MESSAGE);                
        
    }
    
    private int ObtFolio(){
        int iRes = 0;
        String sQuery;
        
        sQuery = "SELECT FInventario FROM Folios";
        
        con.ExeQuery(sQuery);
        
        try {
            if(con.sqlRes.next()){
                iRes = con.sqlRes.getInt("FInventario");
                //JOptionPane.showMessageDialog(null, "Aqui","Duran Gourmet",JOptionPane.INFORMATION_MESSAGE);                

            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.toString(),"Duran Gourmet",JOptionPane.INFORMATION_MESSAGE);                
                //JOptionPane.showMessageDialog(null, "Aqui2","Duran Gourmet",JOptionPane.INFORMATION_MESSAGE);                
        
        }
        return iRes;
    }
    
    private boolean ProdExisI(boolean bPantalla){
        
        boolean validar = false;
        String sQuery;
        
        sQuery = "SELECT * FROM Productos WHERE CodBarras='"+ txtCodigo.getText()+"'";
        
        con.ExeQuery(sQuery);
        
        try {
            if(con.sqlRes.next()){
                if(bPantalla){
                    txtNombre.setText(con.sqlRes.getString("Nombre"));
                    txtExistencia.setText(con.sqlRes.getString("Actual"));
                    txtCosto.setText(con.sqlRes.getString("Costo"));
                    txtPrecio.setText(con.sqlRes.getString("Precio"));
                }
                
                validar = true;
            }else if(bPantalla){
                txtNombre.setText("El producto no existe");
                txtExistencia.setText("xxxxxx");
                txtCosto.setText("xxxxxx");
                txtPrecio.setText("xxxxxx");
            }
         con.sqlRes.close();   
        } 
        catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.toString(),"Duran Gourmet",JOptionPane.INFORMATION_MESSAGE);
        }
        
        return validar;
    }
    
    private boolean extFolio(){
        
        boolean validar = false;
        
        String sQuery;
        
        sQuery = "select Productos.CodBarras,Inventarios.Cantidad, Inventarios.idFolio, Inventarios.Descripcion as InvDes ,Movimientos.Descripcion as MovDes , Inventarios.Fecha from Inventarios ";
        sQuery += "inner join Movimientos on Inventarios.idMovimiento=Movimientos.idMovimiento";
        sQuery += " inner join Productos on Inventarios.idProducto=Productos.idProducto";
        sQuery += " WHERE idFolio="+bFolio.getText();
        
        con.ExeQuery(sQuery);
        
        try {
            if(con.sqlRes.next()){
                txtFecha.setText(con.sqlRes.getString("Fecha"));
                
                if(con.sqlRes.getString("MovDes").lastIndexOf("Entrada")>=0){
                    comboMove.setSelectedIndex(0);
                }else{
                    comboMove.setSelectedIndex(1);
                }
                
                txtCodigo.setText(con.sqlRes.getString("CodBarras"));
                txtCantidad.setText(con.sqlRes.getString("Cantidad"));
                txtDescrip.setText(con.sqlRes.getString("InvDes"));
                validar = true;
            }
            con.sqlRes.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.toString(),"Duran Gourmet",JOptionPane.INFORMATION_MESSAGE);
        }
        return validar;
    }
    
    private boolean veriDatos(){
        boolean validarDatos = true;
        String sVar;
        String sMen="";
        //validar codigo
        sVar = txtCodigo.getText();
        if(sVar.trim().isEmpty()){
            
            validarDatos = false;
            sMen += "Codigo ";
        
        }else if(!ProdExisI(false)){
            
            validarDatos = false;
            sMen += "Codigo ";
        }
        
        //validar costo
        sVar = txtCosto.getText();
        if(!miFun.strDec(sVar)){
            
            validarDatos = false;
            sMen += "Costo ";
            
        }else if(!miFun.convertir(sVar)){
            
            validarDatos = false;
            sMen += "Costo ";
        }
        
        //validar Precio
        sVar = txtPrecio.getText();
        if(!miFun.strDec(sVar)){
            
            validarDatos = false;
            sMen += "Precio ";
            
        }else if(!miFun.convertir(sVar)){
            
            validarDatos = false;
            sMen += "Precio ";
        }
        
        //validar cantiad
        sVar = txtCantidad.getText();
        if(!miFun.strInt(sVar)){
            validarDatos = false;
            sMen += "Cantidad ";
        }else if(!miFun.convertir2(sVar)){
            validarDatos = false;
            sMen += "Cantidad ";
        }
        
        //validar Descripcion
        if(txtDescrip.getText().isEmpty()){
            sMen+= "Descripci√≥n  ";
            validarDatos = false;
        }
        
        if(!sMen.isEmpty()){
            JOptionPane.showMessageDialog(null, "Error en lo siguiente:"+sMen,"Duran Gourmet",JOptionPane.INFORMATION_MESSAGE);
        }
        return validarDatos;
    }
    
    private void rEntrada(){
        //boolean var = false;
        //String sQuery; // Para el Query
        
        // Coloca la transacci√≥n a false para que sea una transaccion
        con.SubAutoCommit(false);
    
        // Intenta realizar las 3 afectaciones a la BD
        if (fnBoolProductoActualiza(true))
            if (incFolio())
               if (resFolioInventario(true))
               {
                   // Commit
                   con.SubCommit();
                   
                    // Mensaje
                    //mi.SubSistemaMensaje("Se ha registrado la Entrada con √âxito");
                    JOptionPane.showMessageDialog(null, "Entrada realizada con exito","Duran Gourmet",JOptionPane.INFORMATION_MESSAGE);

                    
               }
               else               
                   // Realizo Rollback    
                   con.SubRollBack();                   
            else
               // realiza el rollback
               con.SubRollBack();
        else
            // realiza el rollback
            con.SubRollBack();
        
        
        //return var;
    }
    
    private void rSalida(){
    // TODO add your handling code here:
        //String strSqlStmt; // Para el Query
        
        // Coloca la transacci√≥n a false para que sea una transaccion
        con.SubAutoCommit(false);
    
        // Intenta realizar las 3 afectaciones a la BD
        if (fnBoolProductoActualiza(false))
            if (incFolio())
               if (resFolioInventario(false))
               {
                   // Commit
                   con.SubCommit();
                   
                    // Mensaje
                   // con.SubSistemaMensaje("Se ha registrado la Salida con √âxito");
                   JOptionPane.showMessageDialog(null, "Salida realizada con exito","Duran Gourmet",JOptionPane.INFORMATION_MESSAGE);

               }
               else               
                   // Realizo Rollback    
                   con.SubRollBack();                   
            else
                // realiza el rollback
                con.SubRollBack();
        else
            // realiza el rollback
            con.SubRollBack();  
            
    }
    
    private boolean incFolio(){
        boolean bFolio = false;
        
        String sQuery;
        
        sQuery = "UPDATE Folios SET FInventario = FInventario + 1";
        
        if(con.UpdateQuery(sQuery)){
            bFolio = true;
        }
        
        return bFolio;
    }
    
    private boolean ingresarMovimiento(){
        boolean bMovimiento = false;
        String sQuery;
        
        sQuery = "INSERT INTO Movimientos(Descripcion) values('";
        sQuery+= txtDescrip.getText()+"')";
        
        if(con.UpdateQuery(sQuery)){
            bMovimiento = true;
        }
        return bMovimiento;
    }
    
    private String obtenerCodigo(){
        String sCodigo = "";
        String sQuery;
        
        sQuery = "SELECT idProducto FROM Productos WHERE CodBarras='";
        sQuery += txtCodigo.getText()+"'";
        con.ExeQuery(sQuery);
        try {
            if(con.sqlRes.next()){
                sCodigo = con.sqlRes.getString("idProducto");
            }    
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e,"Duran Gourmet",JOptionPane.INFORMATION_MESSAGE);    
        }
        
        return sCodigo;
    }
    
    private String obtenerMovimiento(){
        String sMovimiento = "";
        String sQuery;
        
        sQuery = "SELECT idMovimiento FROM Movimientos WHERE Descripcion ='";
        sQuery += comboMove.getSelectedItem().toString()+"'";
        //JOptionPane.showMessageDialog(null, comboMove.getSelectedItem().toString(),"Duran Gourmet",JOptionPane.INFORMATION_MESSAGE);

        con.ExeQuery(sQuery);
        try {
            if(con.sqlRes.next()){
                sMovimiento = con.sqlRes.getString("idMovimiento");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e,"Duran Gourmet",JOptionPane.INFORMATION_MESSAGE);

        }
        //JOptionPane.showMessageDialog(null, sMovimiento,"Duran Gourmet",JOptionPane.INFORMATION_MESSAGE);
        return sMovimiento;
    }
    
    private boolean resFolioInventario(boolean bEntrada){
        boolean bResFolio = false;
        String sMovimiento;
        
        Date dateHoy = new Date();
        
        // Variable para dar formato
        SimpleDateFormat formato = new SimpleDateFormat("yyyy-MM-dd hh:mm:ss");
        
         // TODO add your handling code here:
        String sQuery; // Para el Query
        
        sQuery = "INSERT INTO Inventarios (idFolio,idMovimiento,Fecha,Cantidad,idProducto,VentaFolio,Descripcion)";
        sQuery = sQuery + " Values ("+bFolio.getText()+",";
        if (bEntrada){
            //sQuery = sQuery + "'Entrada',";
            sMovimiento = obtenerMovimiento();
            sQuery = sQuery + "'"+sMovimiento+"',";
        }
           
        else{
           //sQuery = sQuery + "'Salida',";
            sMovimiento = obtenerMovimiento();
            sQuery = sQuery + "'"+sMovimiento+"',";
        }
           
        sQuery = sQuery + "'"+ formato.format(dateHoy)+"',";
        sQuery = sQuery + txtCantidad.getText()+",";
        sQuery = sQuery + "'"+ obtenerCodigo() +"',0,";
        sQuery = sQuery + "'"+ txtDescrip.getText()+"')";
        //JOptionPane.showMessageDialog(null, sQuery,"Duran Gourmet",JOptionPane.INFORMATION_MESSAGE);
        
        // Ejecuta la Inserci√≥n
        if (con.UpdateQuery(sQuery)){
            bResFolio = true;
        }
        return bResFolio;
    }
    
    private boolean fnBoolProductoActualiza(boolean bEntrada)
    {
        // Variable de Resultados
        boolean bResult=false;
        
         // TODO add your handling code here:
        String sQuery; // Para el Query
        
        
        // Query para actualiza el Precio, Costo,Entradas y Existencias del Producto
        sQuery = "Update Productos set ";
        sQuery = sQuery + " Costo = "+txtCosto.getText()+",";
        sQuery = sQuery + " Precio = "+txtPrecio.getText()+",";
        
        // Verifica si es entrada o salida
        if (bEntrada)
        {
            sQuery = sQuery + " Entrada = Entrada + "+txtCantidad.getText()+",";
            sQuery = sQuery + " Actual   = Actual   + "+txtCantidad.getText();
        }
        else
        {
            sQuery = sQuery + " Salida = Salida + "+txtCantidad.getText()+",";
            sQuery = sQuery + " Actual   = Actual   - "+txtCantidad.getText();            
        }
        
        // Condiciona de acuerdo al c√≥digo
        sQuery = sQuery + " Where CodBarras = '"+txtCodigo.getText()+ "'";
        //JOptionPane.showMessageDialog(null, sQuery,"Duran Gourmet",JOptionPane.INFORMATION_MESSAGE);
        
        if (con.UpdateQuery(sQuery))
            bResult = true;
        
        // Retorna el resultado de la operaci√≥n
        return bResult;
        
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bFolio;
    private javax.swing.JComboBox<String> comboMove;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lCantidad;
    private javax.swing.JLabel lCodigo;
    private javax.swing.JLabel lCosto;
    private javax.swing.JLabel lDescripcion;
    private javax.swing.JLabel lExistencia;
    private javax.swing.JLabel lFecha;
    private javax.swing.JLabel lFolio;
    private javax.swing.JLabel lInventario;
    private javax.swing.JLabel lMovimiento;
    private javax.swing.JLabel lNombre;
    private javax.swing.JLabel lPrecio;
    private javax.swing.JTextField txtCantidad;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JTextField txtCosto;
    private javax.swing.JTextArea txtDescrip;
    private javax.swing.JLabel txtExistencia;
    private javax.swing.JLabel txtFecha;
    private javax.swing.JLabel txtNombre;
    private javax.swing.JTextField txtPrecio;
    // End of variables declaration//GEN-END:variables
}
